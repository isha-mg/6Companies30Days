// https://leetcode.com/problems/maximum-compatibility-score-sum/description/

class Solution {
public:

    int maxCompatibilitySum(vector<vector<int>>& s, vector<vector<int>>& m) {

        int n=s.size();
        int mn=s[0].size();
        int v[n];
        for(int i=0;i<n;i++)
        v[i]=i;

        int ans=0;
        do{
            int sum=0;
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<mn;j++)
                {
                    if(s[i][j]==m[v[i]][j])
                    sum++;
                    // cout<<s[i][j]<<"*"<<m[v[i]][j]<<endl;
                }
                // cout<<v[i]<<endl;
            }
            // cout<<endl;
            ans=max(ans,sum);

        }while(next_permutation(v, v+n));

        return ans;
        
    }
};

// https://leetcode.com/problems/maximum-compatibility-score-sum/submissions/884209327/
