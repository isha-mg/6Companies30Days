// https://leetcode.com/problems/maximum-length-of-repeated-subarray/description/

class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        
        int n=nums1.size();
        int m=nums2.size();
        vector<int> prev(m,0);
        int ans=0;
        for(int i=0;i<n;i++)
        {
            vector<int> curr(m);
            for(int j=0;j<m;j++)
            {
                if(nums1[i]==nums2[j])
                {
                    if(j!=0)
                    curr[j]=prev[j-1]+1;
                    else curr[j]=1;

                    ans=max(ans,curr[j]);
                }
            }
            prev=curr;
        }

        return ans;
    }
};

// https://leetcode.com/problems/maximum-length-of-repeated-subarray/submissions/888154356/
