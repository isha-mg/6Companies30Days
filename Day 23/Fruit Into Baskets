// https://leetcode.com/problems/fruit-into-baskets/description/

class Solution {
public:

    int totalFruit(vector<int>& f) {
        int n=f.size();
        int ans=0;
        int tot=0;
        int j=0,i=0;
        unordered_map<int,int> m;
        while(i<n && j<n && j<=i)
        {
            if(m.size()<=2)
            {
                ans=max(ans,tot);
                m[f[i]]++;
                tot++;
                i++;
            }
            else{
                tot--;
                m[f[j]]--;
                if(m[f[j]]==0)
                m.erase(f[j]);
                j++;
            }
        }

        while(m.size()>2){
            tot--;
            m[f[j]]--;
            if(m[f[j]]==0)
            m.erase(f[j]);
        }

        ans=max(ans,tot);

        return ans;
    }
};

// https://leetcode.com/problems/fruit-into-baskets/submissions/883529420/
