// https://leetcode.com/problems/network-delay-time/description/

class Solution {
public:
    int networkDelayTime(vector<vector<int>>& t, int n, int k) {
        vector<vector<pair<int,int>>> adj(n+1,vector<pair<int,int>>());
        for(int i=0;i<t.size();i++)
        {
            adj[t[i][0]].push_back({t[i][1],t[i][2]});
        }

        priority_queue<pair<int,int>> q;
        vector<int> dis(n+1,INT_MAX);
        dis[k]=0;
        q.push({0,k});

        while(!q.empty())
        {
            int d=q.top().first, node=q.top().second;
            q.pop();
            for(auto x:adj[node])
            {
                if(d+x.second<dis[x.first])
                {
                    q.push({d+x.second,x.first});
                    dis[x.first]=d+x.second;
                }
            }
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            // cout<<i<<" "<<dis[i]<<endl;
            if(dis[i]==INT_MAX)
            return -1;
            ans=max(ans,dis[i]);
        }

        return ans;
    }
};

// https://leetcode.com/problems/network-delay-time/submissions/883745403/
