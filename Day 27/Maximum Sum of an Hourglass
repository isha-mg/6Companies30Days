// https://leetcode.com/problems/maximum-sum-of-an-hourglass/description/

class Solution {
public:
    int maxSum(vector<vector<int>>& g) {
        int ans=0;

        int n=g.size()-3;
        int m=g[0].size()-3;

        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                // cout<<i<<" "<<j<<endl;
                int c=g[i][j]+g[i][j+1]+g[i][j+2]+g[i+1][j+1]+g[i+2][j]+
                      g[i+2][j+1]+g[i+2][j+2];
                ans=max(ans,c);
                cout<<i<<" "<<j<<endl;
                cout<<c<<endl;
            }
        }

        return ans;
    }
};

// https://leetcode.com/problems/maximum-sum-of-an-hourglass/submissions/886370397/
