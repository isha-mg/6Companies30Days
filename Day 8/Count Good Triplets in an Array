// https://leetcode.com/problems/count-good-triplets-in-an-array/description/

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ll long long
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>

class Solution {
public:

    // long long intersection(unordered_set<int> a, unordered_set<int> b)
    // {

    // }
    long long goodTriplets(vector<int>& nums1, vector<int>& nums2) {
        
        ll ans=0;
        ll n=nums1.size();
        vector<ll> m(n);
        for(int i=0;i<n;i++)
        m[nums2[i]]=i;

        ordered_set s;
        vector<ll> l(n),r(n);
        for(int i=0;i<n;i++)
        {
            int cur=m[nums1[i]];
            l[i]=s.order_of_key(cur);
            s.insert(cur);
        }
        s.clear();
        for(int i=n-1;i>=0;i--)
        {
            int cur=m[nums1[i]];
            r[i]=s.size()-s.order_of_key(cur);
            s.insert(cur);
        }

        for(int i=1;i<n-1;i++)
        {
            ans += l[i]*r[i];
        }

        return ans;

    }
};

// https://leetcode.com/problems/count-good-triplets-in-an-array/submissions/874199514/
