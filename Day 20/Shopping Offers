// https://leetcode.com/problems/shopping-offers/description/

class Solution {
public:
    int chk(vector<int> &v, vector<int> &needs){
        for (int i=0; i<needs.size(); i++)
            if (needs[i]<v[i])
                return 0;
        return 1;
    }
    
    int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
        int n=special.size();
        int m=price.size();
        int sum=0;
        for (int i=0; i<m; i++)
            sum+=price[i]*needs[i];
        int minn=sum;
        if (n){
            vector<map<vector<int>,int>> dp(n);
            vector<int> tmp2;
            int x=special[0][special[0].size()-1],t;
            special[0].pop_back();
            
            dp[0][vector<int>(m)]=0;
            t=x;
            tmp2=special[0];
            while (chk(tmp2,needs)){
                dp[0][tmp2]=t;
                t+=x;
                for (int i=0; i<tmp2.size(); i++)
                    tmp2[i]+=special[0][i];    
            }

            for (int i=1; i<n; i++){
                map<vector<int>,int>::iterator it;
                for (it=dp[i-1].begin(); it!=dp[i-1].end(); it++){
                    int x=special[i][special[i].size()-1];
                    int t=it->second;
                    vector<int> v=it->first;
                    do{
                        if (dp[i].find(v)!=dp[i].end())
                            dp[i][v]=min(dp[i][v],t);
                        else
                            dp[i][v]=t;
                        t+=x;
                        for (int j=0; j<v.size(); j++)
                            v[j]+=special[i][j];
                    } while (chk(v,needs));
                }
            }

            for (int i=0; i<n; i++){
                map<vector<int>,int>::iterator it;
                for (it=dp[i].begin(); it!=dp[i].end(); it++){
                    int tmp=it->second;
                    for (int j=0; j<m; j++)
                        tmp+=(needs[j]-it->first[j])*price[j];
                    minn=min(minn,tmp);                    
                }                
            }
        }
        return minn;        
    }
};

// https://leetcode.com/problems/shopping-offers/submissions/881960951/
